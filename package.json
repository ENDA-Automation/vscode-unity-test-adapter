{
  "name": "vscode-unity-test-adapter",
  "displayName": "Unity Framework for C Test Explorer",
  "description": "Run your Unity tests in the Sidebar of Visual Studio Code",
  "icon": "img/icon.png",
  "author": "Florin Popescu",
  "publisher": "fpopescu",
  "version": "0.0.1",
  "license": "MIT",
  "homepage": "https://github.com/Florin-Popescu/vscode-unity-test-adapter",
  "repository": {
    "type": "git",
    "url": "https://github.com/Florin-Popescu/vscode-unity-test-adapter.git"
  },
  "bugs": {
    "url": "https://github.com/Florin-Popescu/vscode-unity-test-adapter/issues"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "test",
    "testing"
  ],
  "main": "out/main.js",
  "scripts": {
    "clean": "rimraf out *.vsix",
    "build": "tsc",
    "watch": "tsc -w",
    "rebuild": "npm run clean && npm run build",
    "package": "vsce package",
    "publish": "vsce publish"
  },
  "dependencies": {
    "async-mutex": "^0.1.4",
    "tree-kill": "^1.2.2",
    "tslib": "^1.9.3",
    "vscode-test-adapter-api": "^1.7.0",
    "vscode-test-adapter-util": "^0.7.0"
  },
  "devDependencies": {
    "@types/node": "^14.6.0",
    "@types/vscode": "~1.23.0",
    "typescript": "^3.5.3",
    "vsce": "^1.65.0"
  },
  "engines": {
    "vscode": "^1.23.0"
  },
  "extensionDependencies": [
    "hbenl.vscode-test-explorer"
  ],
  "activationEvents": [
    "*"
  ],
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Unity Test Explorer",
      "properties": {
        "unityExplorer.debugConfiguration": {
          "description": "Debug configuration to run during test debug",
          "type": "string",
          "scope": "resource"
        },
        "unityExplorer.foldersCommandArgs": {
          "markdownDescription": "The command line arguments used to run the make target to create folders needed for the output",
          "type": "string",
          "scope": "resource"
        },
        "unityExplorer.makeCwdPath": {
          "description": "Path to run make in",
          "type": "string",
          "scope": "resource"
        },
        "unityExplorer.prettyTestCaseRegex": {
			"markdownDescription": "Regular expression to be used to simplify the test case label which by default is the full function name. Put what you want to keep in a matching group and the rest will be removed. Leave blank to disable this. E.g. To go from `test_BlinkTaskShouldToggleLed` to `BlinkTaskShouldToggleLed`, regular expression which could be used is `test_(\\w+)`.",
		  "type": "string",
          "scope": "resource"
        },
        "unityExplorer.prettyTestFileRegex": {
          "markdownDescription": "Regular expression to be used to simplify the test file label which by default is the path relative to the source folder. Put what you want to keep in a matching group and the rest will be removed. Leave blank to disable this. E.g. To go from `test/LEDs/test_BlinkTask.c` to `BlinkTask`, regular expression which could be used is `test_(\\w+)\\.c`.",
          "type": "string",
          "scope": "resource"
        },
        "unityExplorer.projectSourcePath": {
          "description": "Path to the project source files",
          "type": "string",
          "scope": "resource"
        },
        "unityExplorer.sourceFileRegex": {
          "description": "Regular expression to find source files. These are tracked for changes to mark test results as old if not re-run.",
		  "type": "string",
		  "default": "\\w+\\.[ch]",
          "scope": "resource"
        },
        "unityExplorer.testBuildPath": {
          "description": "Path to the test build output files",
          "type": "string",
          "scope": "resource"
        },
        "unityExplorer.testBuildCommandArgs": {
          "markdownDescription": "The command line arguments to add when running make target to build a test",
          "type": "string",
          "scope": "resource"
        },
        "unityExplorer.testCaseRegex": {
          "description": "Regular expression to find test cases in a file. The actual test case name must be put in a matching group",
		  "type": "string",
          "scope": "resource"
        },
        "unityExplorer.testFileRegex": {
          "description": "Regular expression to find test files",
          "type": "string",
		  "default": "test_",
          "scope": "resource"
        },
        "unityExplorer.testSourcePath": {
          "description": "Path to the project test source files",
          "type": "string",
          "scope": "resource"
        }
      }
    }
  }
}
